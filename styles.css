:root {
  color-scheme: dark light;
  /* Dark (default) — higher contrast,少一点灰、更多层次 */
  --bg: #0f1216;         /* 页面背景更深，降低灰雾感 */
  --panel: #151a22;      /* 顶栏/面板 */
  --panel-2: #1b2130;    /* 次级面板 */
  --surface: #11161d;    /* 卡片底色，略深以凸显内容 */
  --text: #e9eef4;       /* 主文本更清晰 */
  --muted: #9aa6b2;      /* 次级文本偏冷灰蓝 */
  --accent: #ff8fb1;     /* pastel pink */
  --accent-2: #ffd6a5;   /* apricot */
  --danger: #ff5c5c;
  --success: #45c26b;
  --warning: #f5a524;
  --border: #273040;     /* 边框略深，减少泛灰 */
  --btn: #1f2632;        /* 按钮底色更干净 */
  --btn-border: #2f3745;
  --divider: #2a3444;
  --input-bg: #0f141a;
  --input-border: #2a3444;
  --kbd-bg: #0e1116;
  --kbd-border: #2a3140;
  --radius: 12px;
  --radius-sm: 8px;
  --shadow-1: 0 6px 16px rgba(0,0,0,0.22);
  --shadow-2: 0 12px 30px rgba(0,0,0,0.32);
}

@media (prefers-color-scheme: light) {
  :root {
    --bg: #f7fafc;
    --panel: #ffffff;
    --panel-2: #f6f8fb;
    --text: #1c2128;
    --muted: #64728a;
    --accent: #ff8fb1;
    --accent-2: #ffd6a5;
    --danger: #d64545;
    --success: #2f9e44;
    --warning: #e67700;
    --border: #e4e8ee;
    --btn: #f3f6fa;
    --btn-border: #d9e0ea;
    --surface: #ffffff;
    --divider: #e5e9ef;
    --input-bg: #ffffff;
    --input-border: #d1d9e0;
    --kbd-bg: #ffffff;
    --kbd-border: #d1d9e0;
    --shadow-1: 0 8px 18px rgba(28,33,40,0.08);
    --shadow-2: 0 16px 36px rgba(28,33,40,0.14);
    --shadow-1: 0 6px 16px rgba(0,0,0,0.08);
    --shadow-2: 0 12px 30px rgba(0,0,0,0.12);
  }
}

/* Theme variants (accent palette only) */
[data-theme="pink"] {
  --accent: #ff8fb1;
  --accent-2: #ffd6a5;
}
[data-theme="mint"] {
  --accent: #81e6d9;
  --accent-2: #90cdf4;
}
/* Make mint theme tonal buttons slightly stronger for better contrast */
[data-theme="mint"] button.tonal {
  background: color-mix(in oklab, var(--accent) 22%, transparent);
  border-color: color-mix(in oklab, var(--accent) 48%, var(--btn-border));
  color: color-mix(in oklab, var(--accent) 92%, var(--text));
}
[data-theme="sky"] {
  --accent: #60a5fa;
  --accent-2: #a5b4fc;
}

* { box-sizing: border-box; }
html, body { height: 100%; }
body {
  margin: 0;
  background: var(--bg);
  color: var(--text);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, 'Helvetica Neue', Arial, 'Noto Sans', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', sans-serif;
  position: relative;
}

/* Mobile: remove default tap highlight to avoid white flash on tap */
html, body, a, label, input, select, textarea { -webkit-tap-highlight-color: transparent; }

/* Subtle accent blobs for background depth */
body::before, body::after {
  content: '';
  position: fixed;
  z-index: 0;
  width: 520px; height: 520px;
  filter: blur(60px);
  opacity: .22;
  pointer-events: none;
}
body::before {
  right: -160px; top: -160px;
  background: radial-gradient(closest-side, color-mix(in oklab, var(--accent) 60%, transparent), transparent 70%);
}
body::after {
  left: -180px; bottom: -180px;
  background: radial-gradient(closest-side, color-mix(in oklab, var(--accent-2) 60%, transparent), transparent 70%);
}

.panel {
  /* Full-window layout for web/PWA */
  position: fixed;
  inset: 0;
  width: auto;
  height: auto;
  min-width: 0;
  min-height: 420px; /* ensure room for at least one card */
  background: var(--panel);
  border-radius: 0;
  box-shadow: none;
  border: none;
  user-select: none;
  resize: none;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center; /* allow inner content to have max-width */
}

/* Constrain content width/height while keeping full-window background */
.panel-inner {
  display: grid;
  grid-template-rows: auto auto 1fr; /* header, toolbar, content */
  width: 100%;
  max-width: 960px;  /* limit max width */
  height: 100%;
  min-height: 0;      /* allow 1fr to shrink properly */
  margin: 0 auto;
  position: relative; /* for ornaments layering */
}
.panel-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 12px;
  background: linear-gradient(0deg, rgba(0,0,0,0.02), rgba(0,0,0,0.02)), var(--panel-2);
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  cursor: default;
  /* prevent accidental dragging in web layout */
  -webkit-app-region: no-drag;
  border-bottom: 1px solid var(--border);
  position: relative;
  z-index: 1;
}
/* subtle accent glow on header */
.panel-header::before {
  content: '';
  position: absolute; inset: 0; pointer-events: none;
  background: radial-gradient(120% 60% at 100% 0%, color-mix(in oklab, var(--accent) 8%, transparent), transparent 60%);
  opacity: .6;
}
/* Accent underline */
.panel-header::after {
  content: '';
  position: absolute; left: 0; right: 0; bottom: -1px; height: 2px;
  background: linear-gradient(90deg, color-mix(in oklab, var(--accent) 85%, transparent), color-mix(in oklab, var(--accent-2) 85%, transparent));
  opacity: .65;
}
.title { font-weight: 600; }
.header-actions { display: flex; gap: 8px; }
.panel-header .header-actions,
.panel-header button,
.panel-toolbar,
.counters,
.popover,
.modal,
button,
input,
label,
select,
textarea {
  /* ensure interactive elements are not part of the drag region */
  -webkit-app-region: no-drag;
}
.panel-toolbar {
  display: flex;
  gap: 10px;
  align-items: center;
  padding: 10px 12px;
  position: relative; z-index: 1;
}
.opacity-label { color: var(--muted); font-size: 12px; }
.opacity-label input { vertical-align: middle; }

.counters {
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding: 10px 12px 14px 12px;
  flex: 1 1 auto;
  min-height: 0;     /* let it truly flex to available height */
  /* Fill remaining space; rely on flex container instead of viewport cap */
  max-height: none;
  overflow: auto;
  position: relative; z-index: 1;
}

/* Ornaments layout */
.ornaments { position: absolute; inset: 0; pointer-events: none; z-index: 0; }
.ornaments .orn { position: absolute; opacity: .9; }
.ornaments .tl { top: -12px; left: -6px; }
.ornaments .br { right: -8px; bottom: -6px; }
.ornaments .tm { top: 8px; left: 50%; transform: translateX(-50%); }
.ornaments .ml { top: 36%; left: 10px; }

.card {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 10px;
  padding: 10px;
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 8px;
  align-items: center;
  transition: box-shadow .2s ease, transform .08s ease, border-color .2s ease;
  box-shadow: inset 0 0 0 1px color-mix(in oklab, var(--accent) 10%, transparent);
  position: relative; /* for drop indicators */
  cursor: default; /* show normal pointer on hover */
}
@media (hover: hover) {
  .card:hover { box-shadow: var(--shadow-1); border-color: color-mix(in oklab, var(--accent) 35%, var(--border)); }
}
.card.enter { animation: card-appear .32s cubic-bezier(.2,.7,.2,1); }
@keyframes card-appear { from { opacity: 0; transform: translateY(6px) scale(.98);} to { opacity: 1; transform: translateY(0) scale(1);} }

/* graceful leave animation for removal */
.card.leaving { overflow: hidden; opacity: 0; transform: translateY(8px) scale(.98); transition: height .22s ease, margin .22s ease, padding .22s ease, opacity .18s ease, transform .18s ease, border-color .2s ease, box-shadow .2s ease; }
.card.leaving * { pointer-events: none; }

.name-row { display: flex; align-items: center; gap: 8px; justify-content: flex-start; }
.badge {
  display: inline-flex; align-items: center; justify-content: center;
  min-width: 44px; height: 24px; padding: 0 10px;
  font-weight: 800; font-size: 13px; letter-spacing: .3px;
  color: #fff;
  background: linear-gradient(135deg, var(--accent), var(--accent-2));
  border: 1px solid rgba(255,255,255,0.15);
  border-radius: 999px;
  box-shadow: 0 4px 10px rgba(124,77,255,0.25);
}
.badge.flip { animation: badge-flip .38s cubic-bezier(.2,.7,.2,1); transform-origin: 50% 60%; will-change: transform; }
/* Include perspective in keyframes to ensure the flip is visible on mobile Safari/Chrome */
@keyframes badge-flip {
  0%   { transform: perspective(600px) rotateX(0deg); }
  40%  { transform: perspective(600px) rotateX(40deg); }
  100% { transform: perspective(600px) rotateX(0deg); }
}

.name { font-weight: 700; }
.name .char { display: inline-block; transform: translateY(6px); opacity: 0; }
.name .char.show { animation: char-rise .32s cubic-bezier(.2,.7,.2,1) forwards; }
@keyframes char-rise { from { transform: translateY(6px); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
.muted { color: var(--muted); font-size: 12px; }
.count { font-size: 18px; font-weight: 700; }

.actions { display: flex; gap: 6px; align-items: center; }
.actions button { padding: 6px 10px; }
.actions .btn-icon { padding: 0; }
.stack { display: flex; flex-direction: column; gap: 4px; }

button {
  background: var(--btn);
  border: 1px solid var(--btn-border);
  color: var(--text);
  border-radius: var(--radius-sm);
  padding: 6px 10px;
  cursor: pointer;
  transition: filter .15s ease, transform .12s ease, background .2s ease, border-color .2s ease, box-shadow .12s ease;
  /* Mobile: remove white flash highlight and native button look */
  -webkit-tap-highlight-color: transparent;
  -webkit-appearance: none;
  appearance: none;
  touch-action: manipulation;
}
@media (hover: hover) {
  button:not(:disabled):hover { filter: brightness(1.04); transform: translateY(-1px); box-shadow: 0 4px 10px rgba(0,0,0,.15); }
  /* PC: hover时点点持续跳动（与原样一致） */
  .btn-ellipsis:not(:disabled):hover .dots i { animation: dots-roll .9s cubic-bezier(.2,.7,.2,1) infinite; }
}
button:not(:disabled):active { transform: translateY(1px); }
/* Avoid icon menu button bouncing on tap */
.btn-ellipsis:active { transform: none; }
button.primary { background: var(--accent); border-color: var(--accent); color: white; }
button.success { background: var(--success); border-color: var(--success); color: white; }
button.danger { background: var(--danger); border-color: var(--danger); color: white; }
button:disabled { opacity: .6; cursor: not-allowed; filter: none; transform: none !important; box-shadow: none !important; }

/* Button variants */
button.ghost { background: transparent; border-color: var(--border); }
button.tonal { background: color-mix(in oklab, var(--accent) 14%, transparent); border-color: color-mix(in oklab, var(--accent) 35%, var(--btn-border)); color: var(--accent); }
button.round { border-radius: 999px; }
.actions .btn-plus { font-weight: 800; box-shadow: 0 6px 14px color-mix(in oklab, var(--accent) 35%, transparent); }
.actions .btn-minus { min-width: 0; }

/* Primary + button soft glow */
.actions .btn-plus { position: relative; }
.actions .btn-plus::after {
  content: '';
  position: absolute; inset: -4px; border-radius: inherit;
  box-shadow: 0 0 24px color-mix(in oklab, var(--accent) 45%, transparent);
  opacity: 0; transition: opacity .2s ease;
}
@media (hover: hover) { .actions .btn-plus:not(:disabled):hover::after { opacity: 1; } }

/* 三点菜单：展开时维持与 PC 悬浮一致的视觉（亮度、上浮、阴影） */
.btn-ellipsis[aria-expanded="true"] {
  filter: brightness(1.04);
  transform: translateY(-1px);
  box-shadow: 0 4px 10px rgba(0,0,0,.15);
}

/* Range (opacity) theming */
input[type=range] { -webkit-appearance: none; appearance: none; height: 24px; background: transparent; }
input[type=range]::-webkit-slider-runnable-track { height: 4px; border-radius: 999px; background: linear-gradient(90deg, color-mix(in oklab, var(--accent) 30%, var(--btn)), color-mix(in oklab, var(--accent-2) 30%, var(--btn))); }
input[type=range]::-moz-range-track { height: 4px; border-radius: 999px; background: linear-gradient(90deg, color-mix(in oklab, var(--accent) 30%, var(--btn)), color-mix(in oklab, var(--accent-2) 30%, var(--btn))); }
input[type=range]::-webkit-slider-thumb { -webkit-appearance: none; appearance: none; width: 14px; height: 14px; border-radius: 50%; background: var(--accent); border: 1px solid rgba(255,255,255,0.3); box-shadow: 0 2px 8px color-mix(in oklab, var(--accent) 50%, transparent); margin-top: -5px; }
input[type=range]::-moz-range-thumb { width: 14px; height: 14px; border-radius: 50%; background: var(--accent); border: 1px solid rgba(255,255,255,0.3); box-shadow: 0 2px 8px color-mix(in oklab, var(--accent) 50%, transparent); }

.import-label { display: inline-flex; align-items: center; gap: 6px; cursor: pointer; }

.reopen {
  position: fixed;
  right: 24px; bottom: 24px;
  padding: 10px 14px;
}
.hidden { display: none; }

.modal { border: none; background: var(--panel); color: var(--text); border-radius: 12px; width: min(520px, 92vw); }
.modal::backdrop { background: rgba(0,0,0,0.55); opacity: 0; transition: opacity .18s ease; }
.modal[open].show::backdrop { opacity: 1; }
.modal-header { display: flex; align-items: center; justify-content: space-between; padding: 10px 12px; background: var(--panel-2); border-top-left-radius: 12px; border-top-right-radius: 12px; position: relative; }
.modal-header::after { content:''; position:absolute; left:0; right:0; bottom:-1px; height:2px; background: linear-gradient(90deg, color-mix(in oklab, var(--accent) 85%, transparent), color-mix(in oklab, var(--accent-2) 85%, transparent)); opacity:.5; }
.modal-body { padding: 10px 12px 16px 12px; }
.modal-title { font-weight: 600; }
.modal-actions {
  display: flex !important;
  flex-direction: row !important;
  align-items: center !important;
  justify-content: flex-end !important;
  margin-top: 10px;
  flex-wrap: nowrap !important;
  gap: 8px;
}
.modal-actions > * { flex: 0 0 auto; white-space: nowrap; }

#rename-input { width: 100%; padding: 8px 10px; border-radius: 8px; border: 1px solid var(--input-border); background: var(--input-bg); color: var(--text); }

.history-list { list-style: none; padding: 0; margin: 0; max-height: 50vh; overflow: auto; }
.history-list li { display: flex; justify-content: space-between; align-items: center; padding: 8px; border-bottom: 1px dashed var(--divider); position: relative; }
.history-list li .left { transition: opacity .18s ease, transform .18s ease; }
.history-list li .right { display: flex; align-items: center; gap: 6px; transition: opacity .18s ease, transform .18s ease; }
.history-list li.editing .left { opacity: 0; transform: translateX(-6px); }
/* When editing, remove left time from layout so editor can take full width */
.history-list li.editing .left { position: absolute; left: 8px; pointer-events: none; }
.pill { font-size: 12px; padding: 2px 6px; border-radius: 999px; }
.pill.add { background: rgba(69,194,107,0.2); color: var(--success); }
.pill.sub { background: rgba(245,165,36,0.2); color: var(--warning); }

/* History header meta: name + current value, clearer separation */
#history-meta {
  display: grid; grid-template-columns: 1fr auto; align-items: baseline;
  padding: 6px 8px 8px; border-bottom: 1px solid var(--divider); margin-bottom: 8px;
}
#history-meta .history-name { font-weight: 700; font-size: 14px; letter-spacing: .2px; }
#history-meta .history-current { display: inline-flex; align-items: baseline; gap: 6px; }
#history-meta .history-current .label { font-size: 11px; color: var(--muted); }
#history-meta .history-current .value { font-weight: 800; font-size: 16px; color: var(--accent); line-height: 1; }

.grid { display: grid; grid-template-columns: 1fr auto; gap: 8px; }

.kbd {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
  background: var(--kbd-bg);
  border: 1px solid var(--kbd-border);
  padding: 2px 6px; border-radius: 6px; font-size: 12px;
}

/* Compact mode when panel is narrow */
.panel.compact .muted { display: none; }
.panel.compact .actions .btn-history,
.panel.compact .actions .btn-rename,
.panel.compact .actions .btn-delete { display: none; }
.panel.compact .actions .btn-menu { display: inline-flex; }
.actions .btn-menu { display: inline-flex; }

/* Floating popover (attached to body, fixed positioning) */
.popover {
  position: fixed;
  background: var(--panel-2);
  border: 1px solid var(--border);
  border-radius: 10px;
  box-shadow: var(--shadow-1);
  overflow: hidden;
  min-width: 180px;
  z-index: 1000;
  transform-origin: top right;
  transform: translateY(6px) scale(.96);
  opacity: 0;
  transition: transform .2s cubic-bezier(.2,.7,.2,1), opacity .2s ease;
}
.popover::before {
  content: '';
  position: absolute; top: -8px; right: 16px; width: 12px; height: 12px;
  background: var(--panel-2);
  border-left: 1px solid var(--border);
  border-top: 1px solid var(--border);
  transform: rotate(45deg);
}
.popover.hidden { pointer-events: none; opacity: 0; transform: translateY(6px) scale(.96); display: block; }
.popover:not(.hidden) { pointer-events: auto; opacity: 1; transform: translateY(0) scale(1); }
.popover .item { display: block; width: 100%; text-align: left; border: none; background: transparent; padding: 10px 12px; color: var(--text); cursor: pointer; opacity: 0; transform: translateY(6px); }
.popover:not(.hidden) .item { animation: item-reveal .28s cubic-bezier(.2,.7,.2,1) forwards; }
.popover:not(.hidden) .item:nth-child(1) { animation-delay: .0s; }
.popover:not(.hidden) .item:nth-child(2) { animation-delay: .05s; }
.popover:not(.hidden) .item:nth-child(3) { animation-delay: .10s; }
.popover:not(.hidden) .item:nth-child(4) { animation-delay: .15s; }
@keyframes item-reveal { from { opacity: 0; transform: translateY(8px);} to { opacity: 1; transform: translateY(0);} }
/* no per-item hide animation on collapse to avoid flicker */
.popover .item.danger { color: #fff; background: var(--danger); border-top: 1px solid rgba(0,0,0,0.1); }
@media (hover: hover) {
  .popover .item:hover { background: color-mix(in oklab, var(--accent) 14%, transparent); }
  .popover .item.danger:hover { filter: brightness(0.95); }
}

/* Quick note content inside popover */
.note-quick { display: flex !important; flex-direction: row !important; flex-wrap: nowrap !important; gap: 6px; align-items: center; padding: 10px 12px; min-width: 260px; }
.note-quick .note-input { flex: 1 1 auto; min-width: 0; padding: 6px 8px; border-radius: 8px; border: 1px solid var(--input-border); background: var(--input-bg); color: var(--text); }
.note-quick > button { flex: 0 0 auto; white-space: nowrap; }
.note-quick button { padding: 6px 10px; }

/* Icon-like compact buttons */
.btn-icon { width: 36px; height: 36px; display: inline-flex; align-items: center; justify-content: center; padding: 0; font-weight: 800; line-height: 1; }
.btn-danger { background: var(--danger); border-color: var(--danger); color: #fff; }

/* Focus ring */
button:focus { outline: none; }
button:focus-visible, .card:focus-visible, input:focus-visible { outline: 2px solid color-mix(in oklab, var(--accent) 60%, transparent); outline-offset: 2px; }
.btn-ellipsis .dots { display: inline-flex; gap: 3px; align-items: center; justify-content: center; }
.btn-ellipsis .dots i { width: 6px; height: 6px; border-radius: 999px; background: currentColor; opacity: .85; display: inline-block; }
@media (hover: hover) {
  .btn-ellipsis:not(:disabled):hover .dots i { animation: dots-roll .9s cubic-bezier(.2,.7,.2,1) 1; }
  .btn-ellipsis:not(:disabled):hover .dots i:nth-child(2) { animation-delay: .08s; }
  .btn-ellipsis:not(:disabled):hover .dots i:nth-child(3) { animation-delay: .16s; }
}
@keyframes dots-roll { 0%{ transform: translateY(0);} 40%{ transform: translateY(-3px);} 80%{ transform: translateY(0);} 100%{ transform: translateY(0);} }

/* Touch：默认不跳；展开时与PC一致持续跳动（关闭后停） */
.no-hover .btn-ellipsis .dots i { animation: none !important; }
.no-hover .btn-ellipsis[aria-expanded="true"] .dots i { animation: dots-roll .9s cubic-bezier(.2,.7,.2,1) infinite !important; }
/* 保持与PC一致的交错延迟（展开态） */
.no-hover .btn-ellipsis[aria-expanded="true"] .dots i:nth-child(2) { animation-delay: .08s !important; }
.no-hover .btn-ellipsis[aria-expanded="true"] .dots i:nth-child(3) { animation-delay: .16s !important; }
/* 移动端：彻底关闭 hover 带来的阴影/上浮，避免点一下就“粘住” */
.no-hover button:not(:disabled):hover, .no-hover .btn-ellipsis:hover {
  filter: none !important;
  transform: none !important;
  box-shadow: none !important;
}
.no-hover .actions .btn-plus:not(:disabled):hover::after { opacity: 0 !important; }
/* 但在按压反馈期间，允许覆盖上面的禁用规则 */
.no-hover button.tap-flash {
  filter: brightness(1.06) !important;
  transform: translateY(-1px) !important;
  box-shadow: 0 6px 14px rgba(0,0,0,.18) !important;
}
.no-hover .actions .btn-plus.tap-flash::after { opacity: 1 !important; }
/* 三点菜单在触屏上展开时，即便出现 :hover 粘滞，也强制展示高亮视觉 */
.no-hover .btn-ellipsis[aria-expanded="true"] {
  filter: brightness(1.04) !important;
  transform: translateY(-1px) !important;
  box-shadow: 0 4px 10px rgba(0,0,0,.15) !important;
}
/* 展开态：通用持续跳动 */
.btn-ellipsis[aria-expanded="true"] .dots i { animation: dots-roll .9s cubic-bezier(.2,.7,.2,1) infinite; }
/* 保持与PC一致的交错延迟（展开态，通用） */
.btn-ellipsis[aria-expanded="true"] .dots i:nth-child(2) { animation-delay: .08s; }
.btn-ellipsis[aria-expanded="true"] .dots i:nth-child(3) { animation-delay: .16s; }

/* 移动端防止卡片/按钮点击后出现焦点样式（避免粘住的选中态） */
.no-hover .card:focus, .no-hover .card:focus-visible { outline: none; }
.no-hover button:focus, .no-hover button:focus-visible { outline: none; }

/* 明确的按压阴影：通过 JS 临时加类，避免 :hover 粘住问题 */
/* 触屏“按压效果”：与 hover 视觉一致，但只在按压期间短暂出现 */
button.tap-flash { filter: brightness(1.06); transform: translateY(-1px); box-shadow: 0 6px 14px rgba(0,0,0,.18); }
.actions .btn-plus.tap-flash::after { opacity: 1; }

.history-note { margin-left: 8px; font-size: 12px; color: var(--muted); }
.note-edit { display: flex !important; flex-direction: row !important; gap: 6px; align-items: center; flex-wrap: nowrap !important; min-width: 0; }
.note-edit > button { flex: 0 0 auto; white-space: nowrap; }
.note-edit input { flex: 1; padding: 6px 8px; border-radius: 8px; border: 1px solid var(--input-border); background: var(--input-bg); color: var(--text); }
.note-edit input { min-width: 0; }
.note-edit button { padding: 6px 10px; flex: 0 0 auto; white-space: nowrap; }
/* Ensure editor/right block can grow to full row width while left is hidden */
.history-list li.editing .note-edit, .history-list li.editing .right { flex: 1 1 100%; }

/* Generic fade+slide helper for history edits */
.fade-slide-in { opacity: 0; transform: translateX(6px); transition: opacity .18s ease, transform .18s ease; }
.fade-slide-in.show { opacity: 1; transform: translateX(0); }

/* Scrollbar styling */
.counters::-webkit-scrollbar { width: 10px; }
.counters::-webkit-scrollbar-thumb { background: color-mix(in oklab, var(--accent) 20%, var(--btn)); border-radius: 10px; border: 2px solid transparent; background-clip: padding-box; }
.counters::-webkit-scrollbar-track { background: transparent; }
.counters { scrollbar-color: color-mix(in oklab, var(--accent) 30%, var(--btn)) transparent; scrollbar-width: thin; }

@media (prefers-reduced-motion: reduce) {
  /* Keep button/tap feedback and menu state visuals.
     Only reduce large or continuous animations to avoid motion sickness. */
  /* Disable heavy animations */
  .card.enter,
  .badge.flip,
  .name .char.show,
  .popover:not(.hidden) .item,
  .popover.hiding {
    animation: none !important;
  }
  /* Short-circuit big transitions (dialogs, popovers, leaving cards) */
  .modal,
  .modal::backdrop,
  .popover,
  .card.leaving {
    transition: none !important;
  }
  /* Allow essential micro-interactions (buttons, menu dots) to remain. */
}

/* Dragging styles & drop indicators */
.card.dragging { opacity: .75; transform: scale(.996); box-shadow: 0 8px 22px rgba(0,0,0,.28); }
.card.drop-top::before,
.card.drop-bottom::after {
  content: '';
  position: absolute; left: 10px; right: 10px; height: 3px;
  background: linear-gradient(90deg, var(--accent), var(--accent-2));
  border-radius: 2px; opacity: .9;
}
.card.drop-top::before { top: -2px; }
.card.drop-bottom::after { bottom: -2px; }
.card.dragging { cursor: grabbing; opacity: .9; transform: scale(.998); box-shadow: 0 10px 26px rgba(0,0,0,.28); }
.card.drag-origin { opacity: .24; }

/* Custom drag image (used by setDragImage, kept off-screen) */
.drag-image {
  border-radius: 10px; box-shadow: var(--shadow-2);
  transform: none; opacity: 1; background: var(--surface);
}

/* Dialog enter/exit animation */
.modal { transform: translateY(8px) scale(.985); opacity: 0; transition: transform .18s cubic-bezier(.2,.7,.2,1), opacity .18s ease; }
.modal[open].show { transform: none; opacity: 1; }
.modal.confirm .modal-actions { gap: 8px; }
.confirm-text { color: var(--muted); }

/* Popover hide animation */
.popover.hiding { opacity: 0; transform: translateY(6px) scale(.96); }

/* Extra ornaments placement */
.ornaments .tr { top: 0; right: 40px; }
.ornaments .bl { bottom: 8px; left: 8px; }
/* Smooth transition when keyboard avoidance shifts elements */
.kb-avoid { transition: transform .22s ease, top .22s ease; }

/* App footer credit */
.app-footer {
  position: absolute;
  left: 50%;
  bottom: 8px;
  transform: translateX(-50%);
  font-size: 11px;
  color: var(--muted);
  letter-spacing: .2px;
  opacity: .85;
  user-select: none;
  z-index: 1;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  pointer-events: auto;
}
.app-footer .sep { opacity: .6; }
.app-footer a { color: var(--muted); text-decoration: none; border-bottom: 1px dotted transparent; }
@media (hover: hover) {
  .app-footer a:hover { color: var(--text); border-bottom-color: color-mix(in oklab, var(--accent) 40%, transparent); }
}
@media (max-width: 420px) {
  .app-footer { gap: 6px; }
  .app-footer .local-note { display: none; }
}
